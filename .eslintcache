[{"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\index.tsx":"1","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\reportWebVitals.ts":"2","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\components\\App.tsx":"3","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\components\\Routes.tsx":"4","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\utils\\language.ts":"5","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\utils\\theme.ts":"6","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\index.tsx":"7","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\WrongPage\\index.tsx":"8","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\WrongPage\\trans.ts":"9","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\WrongPage\\styles.ts":"10","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\Home\\index.tsx":"11","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\Home\\trans.ts":"12","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\Home\\styles.ts":"13","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\components\\Navbar\\index.tsx":"14","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\components\\Navbar\\styles.ts":"15","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\components\\Navbar\\trans.ts":"16","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\components\\PostCard\\index.tsx":"17","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\components\\PostCard\\styles.ts":"18","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\components\\PostCard\\trans.ts":"19","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\api\\hooks.ts":"20","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\api\\methods.ts":"21","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\Startup\\index.tsx":"22","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\Startup\\styles.ts":"23","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\Startup\\trans.ts":"24"},{"size":528,"mtime":1608063219979,"results":"25","hashOfConfig":"26"},{"size":440,"mtime":1608063219985,"results":"27","hashOfConfig":"26"},{"size":867,"mtime":1608413811100,"results":"28","hashOfConfig":"26"},{"size":377,"mtime":1608413979784,"results":"29","hashOfConfig":"26"},{"size":51,"mtime":1608063219986,"results":"30","hashOfConfig":"26"},{"size":524,"mtime":1608395336223,"results":"31","hashOfConfig":"26"},{"size":146,"mtime":1608413751209,"results":"32","hashOfConfig":"26"},{"size":1003,"mtime":1608063219982,"results":"33","hashOfConfig":"26"},{"size":271,"mtime":1608063219984,"results":"34","hashOfConfig":"26"},{"size":292,"mtime":1608063219983,"results":"35","hashOfConfig":"26"},{"size":1485,"mtime":1608413965869,"results":"36","hashOfConfig":"26"},{"size":245,"mtime":1608063219981,"results":"37","hashOfConfig":"26"},{"size":347,"mtime":1608406325908,"results":"38","hashOfConfig":"26"},{"size":1255,"mtime":1608413933989,"results":"39","hashOfConfig":"26"},{"size":570,"mtime":1608064259815,"results":"40","hashOfConfig":"26"},{"size":242,"mtime":1608063492271,"results":"41","hashOfConfig":"26"},{"size":1628,"mtime":1608067873019,"results":"42","hashOfConfig":"26"},{"size":686,"mtime":1608068066712,"results":"43","hashOfConfig":"26"},{"size":242,"mtime":1608064421803,"results":"44","hashOfConfig":"26"},{"size":1217,"mtime":1608149220296,"results":"45","hashOfConfig":"26"},{"size":586,"mtime":1608148950673,"results":"46","hashOfConfig":"26"},{"size":1715,"mtime":1608418704974,"results":"47","hashOfConfig":"26"},{"size":886,"mtime":1608418884935,"results":"48","hashOfConfig":"26"},{"size":1377,"mtime":1608416429485,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"173fyhu",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\index.tsx",[],["101","102"],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\reportWebVitals.ts",[],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\components\\App.tsx",[],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\components\\Routes.tsx",[],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\utils\\language.ts",[],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\utils\\theme.ts",[],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\index.tsx",[],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\WrongPage\\index.tsx",[],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\WrongPage\\trans.ts",[],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\WrongPage\\styles.ts",[],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\Home\\index.tsx",["103"],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\Home\\trans.ts",[],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\Home\\styles.ts",[],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\components\\Navbar\\index.tsx",["104","105"],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\components\\Navbar\\styles.ts",[],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\components\\Navbar\\trans.ts",[],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\components\\PostCard\\index.tsx",["106","107"],"// Deps scoped imports.\r\nimport React from \"react\";\r\nimport { CardContent, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { useLittera } from \"react-littera\";\r\nimport cx from \"classnames\";\r\nimport Card from '@material-ui/core/Card';\r\n\r\n// Project scoped imports.\r\nimport styles from \"./styles\";\r\nimport translations from \"./trans\";\r\n\r\n/**\r\n * Example component\r\n * @description This is an example component including translations and theming.\r\n * @version 1.0.0\r\n * @author Damian BÅ‚ochowiak\r\n */\r\nconst PostCard = (props: PostCardProps) => {\r\n    const translated = useLittera(translations);\r\n    const classes = useStyles();\r\n\r\n    return <Card variant=\"outlined\" className={cx(classes.root, props.className)} style={props.style}>     \r\n    <CardContent className={classes.container}>\r\n        <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\"}}>\r\n<Typography style={{fontWeight: \"bold\"}} variant=\"h5\">{props.title}</Typography>\r\n<Typography style={{opacity: .6}}>{props.date}</Typography>\r\n        </div>\r\n        <div style={{position: \"relative\"}} className={classes.thumbnailContainer}>\r\n            <img style={{position: \"absolute\"}} className={classes.thumbnail} src={props.thumbnailUrl} />\r\n        </div>\r\n    </CardContent>\r\n    </Card>\r\n}\r\n\r\n// Creates a hook for generating classnames.\r\nconst useStyles = makeStyles(styles);\r\n\r\n// Props the component accepts.\r\ntype PostCardProps = {\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    title: string;\r\n    date: string;\r\n    thumbnailUrl: string;\r\n}\r\n\r\n// Time to export! ðŸšš\r\nexport default PostCard;","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\components\\PostCard\\styles.ts",[],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\components\\PostCard\\trans.ts",[],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\api\\hooks.ts",["108","109"],"import { useCallback, useRef, useState } from \"react\";\r\nimport WPClient from \"./methods\";\r\n\r\nconst wpClient = new WPClient();\r\n\r\nexport const usePosts = (include?: number[]) => {\r\n    const [page, setPage] = useState<number>(1);\r\n    const [posts, setPosts] = useState(null as unknown as any[]);\r\n    const ref = useRef(null as unknown as RefApi);\r\n\r\n    \r\n\r\n    if(ref.current === null) {\r\n        const fetchData = \r\n            async (pge: number = 1) => {\r\n                const pg = [\"page\", pge];\r\n                const maxPg = [\"per_page\", 2];\r\n                const inc = include ? [\"include\", include.join(\",\")] : undefined;\r\n                const args = [inc, pg, maxPg].filter(arg => arg !== undefined)  as [string, string][];\r\n    \r\n                setPosts(await wpClient.getData(\"posts\", args))\r\n            }\r\n\r\n        const nextPage = () => {setPage(p => { fetchData(p + 1); return p + 1})}\r\n        const prevPage = () => {setPage(p => { fetchData(p - 1); return p - 1})}\r\n\r\n        ref.current = [posts, fetchData, nextPage, prevPage];\r\n        fetchData();\r\n    }\r\n    ref.current[0] = posts;\r\n\r\n    return ref.current;\r\n}\r\n\r\ntype RefApi = [any[], (page?: number) => void, () => void, () => void];","C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\api\\methods.ts",[],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\Startup\\index.tsx",["110"],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\Startup\\styles.ts",[],"C:\\Users\\xomod\\Documents\\GitHub\\cra-website-template\\src\\pages\\Startup\\trans.ts",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":22,"column":19,"nodeType":"117","messageId":"118","endLine":22,"endColumn":26},{"ruleId":"115","severity":1,"message":"119","line":20,"column":11,"nodeType":"117","messageId":"118","endLine":20,"endColumn":21},{"ruleId":"120","severity":1,"message":"121","line":27,"column":9,"nodeType":"122","endLine":27,"endColumn":113},{"ruleId":"115","severity":1,"message":"119","line":19,"column":11,"nodeType":"117","messageId":"118","endLine":19,"endColumn":21},{"ruleId":"120","severity":1,"message":"121","line":29,"column":13,"nodeType":"122","endLine":29,"endColumn":106},{"ruleId":"115","severity":1,"message":"123","line":1,"column":10,"nodeType":"117","messageId":"118","endLine":1,"endColumn":21},{"ruleId":"115","severity":1,"message":"124","line":7,"column":12,"nodeType":"117","messageId":"118","endLine":7,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":37,"column":17,"nodeType":"122","endLine":37,"endColumn":69},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"@typescript-eslint/no-unused-vars","'refetch' is assigned a value but never used.","Identifier","unusedVar","'translated' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useCallback' is defined but never used.","'page' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]